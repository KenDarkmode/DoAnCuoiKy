@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var isAdmin = User.IsInRole("Admin");
    var isCustomer = User.IsInRole("Customer");
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            @if (isAdmin)
            {
                <a id="manage" class="nav-link text-dark" asp-area="Admin" asp-controller="ProductController" asp-action="Index">Hello Admin!</a>
            }
            else if (isCustomer)
            {
                <a id="manage" class="nav-link text-dark" asp-area="Customer" asp-controller="ProductCustomerController" title="Index">Hello Customer!</a>
            }
        </li>

        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
